include:
  - elastic.compose.yml

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tacs-frontend
    ports:
      - ${PORT:-3000}:3000
    environment:
      - HOSTNAME=0.0.0.0
      - PORT=3000
      - BACKEND_URL=http://backend:8080
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tacs-backend
    ports:
      - ${BACKEND_PORT:-8080}:8080
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:?}
      - JWT_EXPIRATION_TIME=${JWT_EXPIRATION_TIME:?}
      - ELASTIC_URL=es01:9200
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:?}
      - ELASTIC_CA_CERT_PATH=/home/appuser/certs/es01/es01.crt
      - S3_ENDPOINT=${S3_ENDPOINT:?}
      - S3_PUBLIC_ENDPOINT=${S3_PUBLIC_ENDPOINT:?}
      - S3_REGION=${S3_REGION:?}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:?}
      - S3_SECRET_KEY=${S3_SECRET_KEY:?}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:?}
    volumes:
      - certs:/home/appuser/certs:ro
    user: appuser
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
      es03:
        condition: service_healthy

  s3:
    image: quay.io/minio/minio
    container_name: tacs-s3
    command: server /data --console-address ":9001"
    ports:
      - ${MINIO_PORT:-9000}:9000
      - ${MINIO_CONSOLE_PORT:-9001}:9001
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY:?}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY:?}
    volumes:
      - s3-data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  s3-data:
    name: tacs-s3-data
    driver: local
