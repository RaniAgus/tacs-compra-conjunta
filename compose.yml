services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tacs-frontend
    ports:
      - ${PORT:-3000}:3000
    environment:
      - HOSTNAME=0.0.0.0
      - PORT=3000
      - BACKEND_URL=http://backend:8080
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tacs-backend
    ports:
      - ${BACKEND_PORT:-8080}:8080
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:?}
      - JWT_EXPIRATION_TIME=${JWT_EXPIRATION_TIME:?}
      - MONGO_USERNAME=${MONGO_USERNAME:?}
      - MONGO_PASSWORD=${MONGO_PASSWORD:?}
      - MONGO_HOST=mongo
      - MONGO_DB=${MONGO_DB:?}
      - MONGO_AUTH_DB=admin
      - S3_ENDPOINT=http://s3:9000
      - S3_PUBLIC_ENDPOINT=http://localhost:9000/${S3_BUCKET_NAME:?}
      - S3_REGION=${S3_REGION:?}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:?}
      - S3_SECRET_KEY=${S3_SECRET_KEY:?}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:?}
    user: appuser
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      s3:
        condition: service_healthy
      mongo:
        condition: service_healthy

  s3:
    image: quay.io/minio/minio
    container_name: tacs-s3
    command: server /data --console-address ":9001"
    ports:
      - ${MINIO_PORT:-9000}:9000
      - ${MINIO_CONSOLE_PORT:-9001}:9001
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY:?}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY:?}
    volumes:
      - s3-data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:7.0
    container_name: tacs-db
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:?}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:?}
      MONGO_INITDB_DATABASE: ${MONGO_DB:?}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express
    container_name: tacs-db-console
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME:?}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD:?}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME:?}:${MONGO_PASSWORD:?}@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongo:
        condition: service_healthy

volumes:
  s3-data:
    name: tacs-s3-data
    driver: local
